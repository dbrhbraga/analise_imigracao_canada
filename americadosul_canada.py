# -*- coding: utf-8 -*-
"""americadosul_canada.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zSYCC0XFX5a7bKARUogmODOFyoJx_sW4
"""

import pandas as pd

df = pd.read_csv('/content/imigrantes_canada.csv')

df

"""#Tratando Dados üìë"""

df.set_index('Pa√≠s', inplace=True) # definindo o index do data frame como o Pa√≠s

anos = list(map(str, range(1980, 2014)))
anos

brasil = df.loc['Brasil', anos] # essa fun√ß√£o pesquisa por r√≥tulos, no caso o pa√≠s

brasil

"""pra renomear as colunas, criar um dict e passar para um dataframe"""

brasil_dict = {'ano' : brasil.index.tolist(), 'imigrantes': brasil.values.tolist()}
dados_brasil = pd.DataFrame(brasil_dict)

dados_brasil

import matplotlib.pyplot as plt

"""  ## Analisando as tend√™ncias de imigra√ß√£o do Brasil para o Canad√° ao longo dos anos üõ´üåé"""

plt.figure(figsize=(8,4))#(largura, altura) altera√ß√£o de tamanho
plt.title('Imigra√ß√£o do Brasil para o Canad√°')
plt.xlabel('Ano')
plt.ylabel('N√∫mero de imigrantes')
plt.plot(dados_brasil['ano'], dados_brasil['imigrantes'])
plt.xticks(['1980', '1985', '1990', '1995', '2000', '2005', '2010'])
plt.yticks([500, 1000, 1500, 2000, 2500, 3000])
plt.show() #qualquer c√≥digo abaixo disso n√£o ser√° executado

"""  ##  Analisando as tend√™ncias de imigra√ß√£o do Argentina para o Canad√° ao longo dos anos üõ´üåé"""

argentina = df.loc['Argentina', anos] # essa fun√ß√£o pesquisa por r√≥tulos, no caso o pa√≠s
argentina

"""  ## Analisando as tend√™ncias de imigra√ß√£o do Brasil e Argentina para o Canad√° ao longo dos anos üåé"""

argentina_dict = {'ano' : argentina.index.tolist(), 'imigrantes': argentina.values.tolist()}
dados_argentina = pd.DataFrame(argentina_dict)

plt.figure(figsize=(8,4))#(largura, altura) altera√ß√£o de tamanho
plt.title('Imigra√ß√£o de argentinos e brasileiros para o Canad√°')
plt.xlabel('Ano')
plt.ylabel('N√∫mero de imigrantes')
plt.plot(dados_brasil['ano'], dados_brasil['imigrantes'],label = 'Brasil')
plt.plot(dados_argentina['ano'], dados_argentina['imigrantes'], label = 'Argentina')

plt.xticks(['1980', '1985', '1990', '1995', '2000', '2005', '2010'])
plt.yticks([500, 1000, 1500, 2000, 2500, 3000])
plt.show() #qualquer c√≥digo abaixo disso n√£o ser√° executado

df_comparacao = df.loc[['Brasil', 'Argentina'], anos]
df_comparacao = df_comparacao.T
df_comparacao.T

"""O DataFrame df_comparacao pode ser transposto para trocar as linhas pelas colunas e as colunas pelas linhas do DataFrame. Ent√£o, podemos usar a propriedade .T (abrevia√ß√£o para transpose)"""

df_comparacao.head()

fig, ax = plt.subplots(figsize=(8,4))
plt.plot(df_comparacao['Brasil'],label = 'Brasil')
plt.plot(df_comparacao['Argentina'],label ='Argentina')
plt.title('Imigra√ß√£o do Brasil e Argentina para o Canad√°')
plt.xlabel('Ano')
plt.ylabel('N√∫mero de imigrantes')
plt.xticks(['1980', '1985', '1990', '1995', '2000', '2005', '2010'])
plt.legend()
plt.show()

fig, ax = plt.subplots(figsize=(8,4))
ax.plot(dados_brasil['ano'], dados_brasil['imigrantes'])
ax.set_title('Imigra√ß√£o do Brasil para o Canad√°\n1980 a 2013')
ax.set_xlabel('Ano')
ax.set_ylabel('N√∫mero de imigrantes')
ax.xaxis.set_major_locator(plt.MultipleLocator(5))
plt.show()

"""Plotando dois gr√°ficos em uma s√≥ figura"""

fig, axs = plt.subplots(1,2, figsize=(15,5))

axs[0].plot(dados_brasil['ano'], dados_brasil['imigrantes'])
axs[0].set_title('Imigra√ß√£o do Brasil para o Canad√°\n1980 a 2013')
axs[0].set_xlabel('Ano')
axs[0].set_ylabel('N√∫mero de imigrantes')
axs[0].xaxis.set_major_locator(plt.MultipleLocator(5))
axs[0].grid()

axs[1].boxplot(dados_brasil['imigrantes'])
axs[1].set_title('Boxplot da migra√ß√£o do Brasil para o Canad√°\n1980 a 2013')
axs[1].grid()
plt.show()

fig, axs = plt.subplots(2,2, figsize=(12,6))
fig.subplots_adjust(hspace=0.5, wspace=0.3)
fig.suptitle('Imigra√ß√£o dos quatro maiores pa√≠ses da Am√©rica do Sul para o Canad√°\n 1980 - 2013')

axs[0,0].plot(df.loc['Brasil', anos])
axs[0,0].set_title('Brasil')

axs[0,1].plot(df.loc['Col√¥mbia', anos])
axs[0,1].set_title('Col√¥mbia')

axs[1,0].plot(df.loc['Argentina', anos])
axs[1,0].set_title('Argentina')

axs[1,1].plot(df.loc['Peru', anos])
axs[1,1].set_title('Peru')

for ax in axs.flat:
    ax.set(xlabel='Ano', ylabel='N√∫mero de imigrantes')
    ax.xaxis.set_major_locator(plt.MultipleLocator(5))
    ax.grid()

ymin = 0
ymax = 7000
for ax in axs.ravel():
  ax.set_ylim(ymin, ymax)

plt.show()

"""# ‚òù ajustes"""

fig, ax = plt.subplots(figsize=(8,4))
ax.plot(dados_brasil['ano'], dados_brasil['imigrantes'], lw=2, color='plum', marker='o')

ax.set_title('Imigra√ß√£o do Brasil para o Canad√°\n1980 a 2013', fontsize=18, loc='left')
ax.set_xlabel('Ano', fontsize=12)
ax.set_ylabel('N√∫mero de imigrantes', fontsize=12)
ax.xaxis.set_major_locator(plt.MultipleLocator(5))
ax.yaxis.set_tick_params(labelsize=12)
ax.xaxis.set_tick_params(labelsize=12)
plt.grid(linestyle='--')
plt.show()

america_sul = df.query('Regi√£o == "Am√©rica do Sul"')
america_sul

america_sul_sorted = america_sul.sort_values('Total', ascending=True)

cores = ['royalblue', 'orange', 'forestgreen', 'orchid', 'purple', 'brown', 'slateblue', 'gray', 'olive', 'navy', 'teal','tomato']
fig, ax = plt.subplots(figsize=(12,5))
ax.barh(america_sul_sorted.index, america_sul_sorted['Total'], color = cores)
ax.set_title('Imigra√ß√£o da Am√©rica do Sul para o Canad√°\n1980 a 2013', loc = 'left', fontsize = 18)
ax.set_xlabel('')
ax.set_ylabel('N√∫mero de imigrantes', fontsize=14)
ax.xaxis.set_tick_params(labelsize=12)
ax.yaxis.set_tick_params(labelsize=12)
plt.show()

cores = []
for pais in america_sul_sorted.index:
  if pais == 'Brasil':
    cores.append('green')
  else:
    cores.append('silver')

fig, ax = plt.subplots(figsize=(12,5))
ax.barh(america_sul_sorted.index, america_sul_sorted['Total'], color = cores)
ax.set_title('Imigra√ß√£o da Am√©rica do Sul para o Canad√°\n1980 a 2013', loc = 'left', fontsize = 18)
ax.set_xlabel('')
ax.set_ylabel('N√∫mero de imigrantes', fontsize=14)
ax.xaxis.set_tick_params(labelsize=12)
ax.yaxis.set_tick_params(labelsize=12)

for i, v in enumerate(america_sul_sorted['Total']):
  ax.text(v  + 20, i, str(v), color = 'black', fontsize=10, ha='left', va='center' )

ax.set_frame_on(False)
ax.get_xaxis().set_visible(False)
ax.tick_params(axis='both', which='both', length=0)
fig.savefig('imigra√ß√£o_america_sul.png', transparent=True, dpi=300, bbox_inches='tight')
plt.show()

print(fig.canvas.get_supported_filetypes())

fig, ax = plt.subplots(figsize=(8,4))
ax.plot(dados_brasil['ano'], dados_brasil['imigrantes'], lw=2, color='green')

ax.set_title('Imigra√ß√£o do Brasil para o Canad√°\n1980 a 2013', fontsize=18, loc='left')
ax.set_xlabel('Ano', fontsize=12)
ax.set_ylabel('N√∫mero de imigrantes', fontsize=12)
ax.xaxis.set_major_locator(plt.MultipleLocator(5))
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
ax.yaxis.set_tick_params(labelsize=12)
ax.xaxis.set_tick_params(labelsize=12)
fig.savefig('imigra√ß√£o_brasil_canada.png', transparent=False, dpi=300, bbox_inches='tight')
plt.show()

"""# Usando a biblioteca Seaborn"""

import seaborn as sns

sns.set_theme()

top_10 = df.sort_values('Total', ascending=False).head(10)

top_10

"""#üåà Possibilidade de cores"""

fig, ax = plt.subplots(figsize=(8,4))
ax = sns.barplot(data=top_10, y=top_10.index, x='Total', orient='h', palette='Set2')

ax.set_title('Pa√≠ses com maior imigra√ß√£o para o Canad√°\n1980 a 2013', loc='left', fontsize=16)

ax.set_xlabel('N√∫mero de imigrantes', fontsize=14)
ax.set_label('')
plt.show()

def gerar_grafico_paleta(palette):
  fig, ax = plt.subplots(figsize=(8,4))
  ax = sns.barplot(data=top_10, y=top_10.index, x='Total', orient='h', palette=palette)
  ax.set_title('Pa√≠ses com maior imigra√ß√£o para o Canad√°\n1980 a 2013', loc='left', fontsize=18)
  ax.set_xlabel('N√∫mero de imigrantes', fontsize=14)
  ax.set_ylabel('')

  plt.show()

gerar_grafico_paleta('Blues_r')

gerar_grafico_paleta('rocket')

gerar_grafico_paleta('coolwarm_r')

sns.set_theme(style='dark')
gerar_grafico_paleta('tab10')

sns.set_theme(style='white')
gerar_grafico_paleta('tab10')

fig, ax = plt.subplots(figsize=(8,4))
ax = sns.barplot(data=top_10, y=top_10.index, x='Total', orient='h', palette='tab10')

ax.set_title('Pa√≠ses com maior imigra√ß√£o para o Canad√°', loc='left', fontsize=18)
ax.set_xlabel('N√∫mero de imigrantes', fontsize=14)
ax.set_ylabel('')
sns.despine( )
plt.show()

sns.set_theme()
sns.set_palette('Dark2')

fig, ax = plt.subplots(figsize=(10, 5))
ax = sns.lineplot(df.loc['Brasil', anos], label='Brasil', lw=3)
ax = sns.lineplot(df.loc['Argentina', anos], label='Argentina', lw=3)
ax = sns.lineplot(df.loc['Peru', anos], label='Peru', lw=3)
ax = sns.lineplot(df.loc['Col√¥mbia', anos], label='Col√¥mbia', lw=3)

ax.set_title('Imigra√ß√£o dos maiores pa√≠ses da Am√©rica do Sul\npara o Canad√° de 1980 a 2013', loc='left', fontsize=20)
ax.set_xlabel('Ano', fontsize=14)
ax.set_ylabel('N√∫mero de imigrantes', fontsize=14)

ax.xaxis.set_major_locator(plt.MultipleLocator(5))

ax.legend(title='Pa√≠ses', loc='upper right', bbox_to_anchor=(1.18, 1.02))

plt.show()

"""#  Gr√°ficos interativos com a biblioteca Plotly.express ‚ö°"""

import plotly.express as px

fig = px.line(dados_brasil, x ='ano', y ='imigrantes',
              title='Imigra√ß√£o do Brasil para o Canad√° no per√≠odo de 1980 a 2013')
fig.update_traces(line_color='green', line_width=4)
fig.update_layout(width=1000, height=500,
                  xaxis={'tickangle':-45},
                  font_family='Arial',
                  font_size=14,
                  font_color='grey',
                  title_font_color='black',
                  title_font_size=22,
                  xaxis_title='Ano',
                  yaxis_title='N√∫mero de imigrantes')

fig.show()

america_sul.head()

df_america_sul_clean = america_sul.drop(['Continente', 'Regi√£o', 'Total'], axis=1)
america_sul_final = df_america_sul_clean.T
america_sul_final.head()

fig = px.line(america_sul_final, x=america_sul_final.index, y=america_sul_final.columns, color='Pa√≠s',
              title='Imigra√ß√£o dos pa√≠ses da Am√©rica do Sul para o Canad√° de 1980 a 2013')

fig.update_layout(
    xaxis={'tickangle': -45},
    xaxis_title='Ano',
    yaxis_title='N√∫mero de imigrantes',

)
fig.show()

fig.write_html('imigrantes_america_sul.html')

dados_brasil['ano'] = dados_brasil['ano'].astype(int)

# Criando uma figura
fig = go.Figure()

# Adicionando a linha do gr√°fico e definindo a espessura da linha
fig.add_trace(
    go.Scatter(x=[dados_brasil['ano'].iloc[0]], y=[dados_brasil['imigrantes'].iloc[0]], mode='lines', name='Imigrantes', line=dict(width=4))
)

# Definindo as configura√ß√µes de layout
fig.update_layout(
    title=dict(
        text='<b>Imigra√ß√£o do Brasil para o Canad√° no per√≠odo de 1980 a 2013</b>',
        x=0.12,
        xanchor='left',
        font=dict(size=20)
    ),
    xaxis=dict(range=[1980, 2013], autorange=False, title='<b>Ano</b>'),
    yaxis=dict(range=[0, 3000], autorange=False, title='<b>N√∫mero de imigrantes</b>'),
    updatemenus=[dict(
        type='buttons',
        showactive=False,
        buttons=[dict(
            label='Play',
            method='animate',
            args=[None, {'frame': {'duration': 100, 'redraw': True}, 'fromcurrent': True}]
        )]
    )],
    width=1000,
    height=500
)

# Definir as configura√ß√µes de anima√ß√£o
frames = [go.Frame(data=[go.Scatter(x=dados_brasil['ano'].iloc[:i+1], y=dados_brasil['imigrantes'].iloc[:i+1])]) for i in range(len(dados_brasil))]
fig.frames = frames

# Mostrando a figura
fig.show()

import plotly.graph_objs as go

# Criando uma figura
fig = go.Figure()

# Adicionando a linha com os dados do Brasil
fig.add_trace(
    go.Scatter(x=[dados_brasil['ano'].iloc[0]], y=[dados_brasil['imigrantes'].iloc[0]], mode='lines', name='Imigrantes do Brasil', line=dict(width=4))
)

# Adicionando a linha com os dados da Argentina
fig.add_trace(
    go.Scatter(x=[dados_argentina['ano'].iloc[0]], y=[dados_argentina['imigrantes'].iloc[0]], mode='lines', name='Imigrantes da Argentina', line=dict(width=4))
)

# Definindo as configura√ß√µes de layout
fig.update_layout(
    title=dict(
        text='<b>Imigra√ß√£o do Brasil e da Argentina para o Canad√° no per√≠odo de 1980 a 2013',
        x=0.1,

        font=dict(size=18)
    ),
    xaxis=dict(range=[1980, 2013], autorange=False, title='<b>Ano</b>'),
    yaxis=dict(range=[0, 3000], autorange=False, title='<b>N√∫mero de imigrantes</b>'),
    updatemenus=[dict(
        type='buttons',
        showactive=False,
        buttons=[dict(
            label='Play',
            method='animate',
            args=[None, {'frame': {'duration': 100, 'redraw': True}, 'fromcurrent': True}]
        )]
    )],
    width=1200, # largura da figura em pixels
    height=600 # altura da figura em pixels
)

# Definindo as configura√ß√µes de anima√ß√£o
frames = []
for i in range(len(dados_brasil)):
    frame_data = [
        go.Scatter(x=dados_brasil['ano'].iloc[:i+1], y=dados_brasil['imigrantes'].iloc[:i+1]),
        go.Scatter(x=dados_argentina['ano'].iloc[:i+1], y=dados_argentina['imigrantes'].iloc[:i+1])
    ]
    frame = go.Frame(data=frame_data)
    frames.append(frame)
fig.frames = frames

# Mostrando a figura
fig.show()

import plotly.graph_objs as go

# Criando uma figura
fig = go.Figure()

# Adicionando a linha com os dados do Brasil (apenas linha inicial)
fig.add_trace(
    go.Scatter(x=[dados_brasil['ano'].iloc[0]], y=[dados_brasil['imigrantes'].iloc[0]],
               mode='lines', name='Imigrantes do Brasil', line=dict(width=4))
)

# Adicionando a linha com os dados da Argentina (apenas linha inicial)
fig.add_trace(
    go.Scatter(x=[dados_argentina['ano'].iloc[0]], y=[dados_argentina['imigrantes'].iloc[0]],
               mode='lines', name='Imigrantes da Argentina', line=dict(width=4))
)

# Definindo as configura√ß√µes de layout
fig.update_layout(
    title=dict(
        text='<b>Imigra√ß√£o do Brasil para o Canad√° no per√≠odo de 1980 a 2013',
        x=0.1,
        font=dict(size=18)
    ),
    xaxis=dict(range=[1980, 2013], autorange=False, title='<b>Ano</b>'),
    yaxis=dict(range=[0, 3000], autorange=False, title='<b>N√∫mero de imigrantes</b>'),
    updatemenus=[dict(
        type='buttons',
        showactive=False,
        buttons=[dict(
            label='Play',
            method='animate',
            args=[None, {'frame': {'duration': 100, 'redraw': True}, 'fromcurrent': True}]
        )]
    )],
    width=1200, # largura da figura em pixels
    height=600 # altura da figura em pixels
)

# Definindo as configura√ß√µes de anima√ß√£o COM MARCADOR APENAS NA PONTA
frames = []
for i in range(len(dados_brasil)):
    # Dados da linha completa
    brasil_line_x = dados_brasil['ano'].iloc[:i+1]
    brasil_line_y = dados_brasil['imigrantes'].iloc[:i+1]
    argentina_line_x = dados_argentina['ano'].iloc[:i+1]
    argentina_line_y = dados_argentina['imigrantes'].iloc[:i+1]

    # Dados apenas para o marcador na ponta
    brasil_marker_x = [dados_brasil['ano'].iloc[i]] if i > 0 else []
    brasil_marker_y = [dados_brasil['imigrantes'].iloc[i]] if i > 0 else []
    argentina_marker_x = [dados_argentina['ano'].iloc[i]] if i > 0 else []
    argentina_marker_y = [dados_argentina['imigrantes'].iloc[i]] if i > 0 else []

    frame_data = [
        # Linha completa do Brasil
        go.Scatter(x=brasil_line_x, y=brasil_line_y, mode='lines'),
        # Marcador apenas na ponta do Brasil
        go.Scatter(x=brasil_marker_x, y=brasil_marker_y, mode='markers',
                  marker=dict(size=8, color='blue'), showlegend=False),
        # Linha completa da Argentina
        go.Scatter(x=argentina_line_x, y=argentina_line_y, mode='lines'),
        # Marcador apenas na ponta da Argentina
        go.Scatter(x=argentina_marker_x, y=argentina_marker_y, mode='markers',
                  marker=dict(size=8, color='red'), showlegend=False)
    ]
    frame = go.Frame(data=frame_data)
    frames.append(frame)
fig.frames = frames

# Mostrando a figura
fig.show()

import plotly.graph_objs as go

# Criando uma figura
fig = go.Figure()

# Adicionando a linha com os dados do Brasil (apenas linha inicial)
fig.add_trace(
    go.Scatter(x=[dados_brasil['ano'].iloc[0]], y=[dados_brasil['imigrantes'].iloc[0]],
               mode='lines', name='Imigrantes do Brasil', line=dict(width=4, color='blue'))
)

# Adicionando a linha com os dados da Argentina (apenas linha inicial)
fig.add_trace(
    go.Scatter(x=[dados_argentina['ano'].iloc[0]], y=[dados_argentina['imigrantes'].iloc[0]],
               mode='lines', name='Imigrantes da Argentina', line=dict(width=4, color='red'))
)

# Adicionando traces vazias para os marcadores (para manter a estrutura consistente)
fig.add_trace(
    go.Scatter(x=[], y=[], mode='markers', marker=dict(size=8, color='blue'),
               name='Ponta Brasil', showlegend=False)
)

fig.add_trace(
    go.Scatter(x=[], y=[], mode='markers', marker=dict(size=8, color='red'),
               name='Ponta Argentina', showlegend=False)
)

# Definindo as configura√ß√µes de layout
fig.update_layout(
    title=dict(
        text='<b>Imigra√ß√£o do Brasil e da Argentina para o Canad√° no per√≠odo de 1980 a 2013',
        x=0.1,
        font=dict(size=18)
    ),
    xaxis=dict(range=[1980, 2013], autorange=False, title='<b>Ano</b>'),
    yaxis=dict(range=[0, 3000], autorange=False, title='<b>N√∫mero de imigrantes</b>'),
    updatemenus=[dict(
        type='buttons',
        showactive=False,
        buttons=[dict(
            label='Play',
            method='animate',
            args=[None, {'frame': {'duration': 100, 'redraw': True}, 'fromcurrent': True}]
        )]
    )],
    width=1200, # largura da figura em pixels
    height=600 # altura da figura em pixels
)

# Definindo as configura√ß√µes de anima√ß√£o COM MARCADOR APENAS NA PONTA
frames = []
for i in range(len(dados_brasil)):
    # Dados da linha completa
    brasil_line_x = dados_brasil['ano'].iloc[:i+1]
    brasil_line_y = dados_brasil['imigrantes'].iloc[:i+1]
    argentina_line_x = dados_argentina['ano'].iloc[:i+1]
    argentina_line_y = dados_argentina['imigrantes'].iloc[:i+1]

    # Dados apenas para o marcador na ponta
    brasil_marker_x = [dados_brasil['ano'].iloc[i]] if i >= 0 else []
    brasil_marker_y = [dados_brasil['imigrantes'].iloc[i]] if i >= 0 else []
    argentina_marker_x = [dados_argentina['ano'].iloc[i]] if i >= 0 else []
    argentina_marker_y = [dados_argentina['imigrantes'].iloc[i]] if i >= 0 else []

    frame_data = [
        # Linha completa do Brasil (trace 0)
        go.Scatter(x=brasil_line_x, y=brasil_line_y, mode='lines', line=dict(color='blue')),
        # Linha completa da Argentina (trace 1)
        go.Scatter(x=argentina_line_x, y=argentina_line_y, mode='lines', line=dict(color='red')),
        # Marcador apenas na ponta do Brasil (trace 2)
        go.Scatter(x=brasil_marker_x, y=brasil_marker_y, mode='markers',
                  marker=dict(size=8, color='blue')),
        # Marcador apenas na ponta da Argentina (trace 3)
        go.Scatter(x=argentina_marker_x, y=argentina_marker_y, mode='markers',
                  marker=dict(size=8, color='red'))
    ]
    frame = go.Frame(data=frame_data)
    frames.append(frame)
fig.frames = frames

fig.write_html("grafico_interativo_argentina-brasil.html")